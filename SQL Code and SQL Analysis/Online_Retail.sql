/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW OnlineRetail_view as
SELECT  *, (Quantity * UnitPrice) AS total_price FROM OnlineRetail

CREATE VIEW view_OnlineRetail as
SELECT  *, (Quantity * UnitPrice) AS total_price FROM OnlineRetail
where CustomerID is not null 
and Description is not null
and Country not in ('Unspecified')

select * from OnlineRetail;
select * from OnlineRetail_view;
select * from view_OnlineRetail

-- calander table
select invoicedate, invoicetime from view_OnlineRetail

-- total number of distinct customer in each country
select Country, count(distinct customerid) as total_customers from view_OnlineRetail
where CustomerID is not null
group by country
order by Country

-- revenue generated per country
select country, ROUND(SUM(total_price),2) AS total_revenue 
from view_OnlineRetail
where CustomerID is not null
group by Country
order by total_revenue desc


-- distinct customerid's 
select distinct CustomerID from view_OnlineRetail


-- distinct stockcode
select distinct StockCode from view_OnlineRetail


-- Monthly Revenue
-- The reason for high revenue may be because of festival season like christmas
select  month(invoicedate) as Month, ROUND(SUM(total_price),2) AS Monthly_Revenue from view_OnlineRetail
where CustomerID is not null
--and year(invoicedate) = 2011
group by month(invoicedate)
ORDER BY month;
--342506.38 month 12 year 2011
--554604.02 month 12 year 2010
--897110.4  month 12 year 2010 and 2011

-- top 3 customers contribution in the revenue
select country, CustomerID, customers_purchase from (
select country, 
       CustomerID, 
       ROUND(SUM(total_price),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(total_price) desc) as rn
from view_OnlineRetail
where CustomerID is not null 
group by CustomerID, Country
) as top_Customers
where rn <= 3;

--select country, 
--       CustomerID, 
--       ROUND(SUM(total_price),2) as customers_purchase
--from view_OnlineRetail
--where CustomerID is not null and country = 'Saudi Arabia'
--group by CustomerID, Country 
--order by SUM(total_price) desc;

-- revenu contribution of top 3 per country
with contribution as (
select country, 
       CustomerID, 
       ROUND(SUM(total_price),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(total_price) desc) as rn
from view_OnlineRetail
where CustomerID is not null
group by CustomerID, Country
),
sum_revenue as (
select country, CustomerID, customers_purchase from contribution
where rn <=3
)
select country, SUM(customers_purchase) as revenue_generated
from sum_revenue
group by Country
order by SUM(customers_purchase) desc;  

-- revenue contribution of customers other than top 3 customers in the country
with contribution as (
select country, 
       CustomerID, 
       ROUND(SUM(total_price),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(total_price) desc) as rn
from view_OnlineRetail
where CustomerID is not null
group by CustomerID, Country
),
sum_revenue as (
select country, CustomerID, customers_purchase from contribution
where rn > 3
)
select country, SUM(customers_purchase) as revenue_generated
from sum_revenue
group by Country
order by SUM(customers_purchase) desc;


select customerid, InvoiceNo, month(invoicedate), count(*) as order_count from view_OnlineRetail
where InvoiceNo not like 'C%'
group by customerid, InvoiceNo,month(invoicedate)
order by customerid

-- Revenue Generated by the customers who has ordered more than once
select customerid, country, count(distinct InvoiceNo) as distinct_orders, round(sum(total_price),2) as revenue
from view_OnlineRetail
where InvoiceNo not like 'C%'
group by customerid, Country
having count(distinct InvoiceNo) > 1
order by distinct_orders desc 

-- revenue by customers who are repeated more than 10 times
select customerid,country, distinct_orders as rep_customer, revenue 
from (
       select customerid, country, count(distinct InvoiceNo) as distinct_orders, round(sum(total_price),2) as revenue
       from view_OnlineRetail
       where InvoiceNo not like 'C%'
       group by customerid, country
       having count(distinct InvoiceNo) > 1
	   ) as repeters
where distinct_orders > 10
order by rep_customer desc 

--select CustomerID
--    , InvoiceNo
--    , InvoiceDate
--    , InvoiceTime
--	, DENSE_RANK() over(partition by customerid order by invoicedate)
--from view_OnlineRetail
--where InvoiceNo not like 'C%'


with timings as
(
select CustomerID
    , InvoiceNo
    , InvoiceDate
--  , InvoiceTime
	, Country
	, LAG(InvoiceDate) over(partition by customerid order by invoicedate) as previous_date
	, LAG(InvoiceNo) over(partition by customerid order by invoicedate) as prev_invoiceNo
	--, Row_number() over(partition by customerid order by invoicedate) as position
from view_OnlineRetail
where InvoiceNo not like 'C%'
),
diff as
(
select *, DATEDIFF(dd, previous_date, InvoiceDate) as time_diff from timings
)

select * from diff
where time_diff <> 0
--order by time_diff
