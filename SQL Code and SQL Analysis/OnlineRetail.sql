/****** Script for SelectTopNRows command from SSMS  ******/
CREATE VIEW view_OnlineRetail as
SELECT  * FROM OnlineRetail
where CustomerID is not null 
    and quantity >=1 and unitprice > 0
    and Description is not null
    and Country not in ('Unspecified')


select distinct Country from OnlineRetail;
select * from view_OnlineRetail
where totalprice is null
drop view view_OnlineRetail
-- calander table
select invoicedate, invoicetime from view_OnlineRetail

-- total number of distinct customer in each country
select Country, 
       count(distinct customerid) as total_customers 
from view_OnlineRetail
where CustomerID is not null
group by country
order by Country

-- revenue generated per country
select 
     country, 
	 ROUND(SUM(totalprice),2) AS total_revenue 
from view_OnlineRetail
where CustomerID is not null
group by Country
order by total_revenue desc


-- distinct customerid's 
select distinct CustomerID from view_OnlineRetail


-- distinct stockcode
select distinct StockCode from view_OnlineRetail


-- Monthly Revenue
-- The reason for high revenue may be because of festival season like christmas
select  
    month(invoicedate) as Month, 
	ROUND(SUM(totalprice),2) AS Monthly_Revenue 
	from view_OnlineRetail
where CustomerID is not null
group by month(invoicedate)
ORDER BY month;


-- top 3 customers contribution in the revenue
select 
   country, 
   CustomerID, 
   customers_purchase from
(
select country, 
       CustomerID, 
       ROUND(SUM(totalprice),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(totalprice) desc) as rn
from view_OnlineRetail
where CustomerID is not null 
group by CustomerID, Country
) as top_Customers
where rn <= 3;

--select country, 
--       CustomerID, 
--       ROUND(SUM(total_price),2) as customers_purchase
--from view_OnlineRetail
--where CustomerID is not null and country = 'Saudi Arabia'
--group by CustomerID, Country 
--order by SUM(totalprice) desc;

-- revenu contribution of top 3 per country
with contribution as (
select country, 
       CustomerID, 
       ROUND(SUM(totalprice),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(totalprice) desc) as rn
from view_OnlineRetail
where CustomerID is not null
group by CustomerID, Country
),
sum_revenue as (
select 
    country, 
	CustomerID, 
	customers_purchase 
from contribution
where rn <=3
)
select 
     country, 
	 SUM(customers_purchase) as revenue_generated
from sum_revenue
group by Country
order by SUM(customers_purchase) desc;  

-- revenue contribution of customers other than top 3 customers in the country
with contribution as (
select country, 
       CustomerID, 
       ROUND(SUM(totalprice),2) as customers_purchase,
	   ROW_NUMBER() over(partition by country order by SUM(totalprice) desc) as rn
from view_OnlineRetail
where CustomerID is not null
group by CustomerID, Country
),
sum_revenue as (
select 
      country, 
	  CustomerID, 
	  customers_purchase from contribution
where rn > 3
)
select 
      country, 
	  SUM(customers_purchase) as revenue_generated
from sum_revenue
group by Country
order by SUM(customers_purchase) desc;

-- monthly count of orders
select 
     customerid, 
	 InvoiceNo, 
	 month(invoicedate) as month, 
	 count(InvoiceNo) as ordercount 
from view_OnlineRetail
where InvoiceNo not like 'C%'
group by customerid, InvoiceNo,month(invoicedate)
order by month

-- Revenue Generated by the customers who has ordered more than once
select 
      customerid, 
	  country, 
	  count(distinct InvoiceNo) as distinctorders, 
	  round(sum(totalprice),2) as revenue
from view_OnlineRetail
where InvoiceNo not like 'C%'
group by customerid, Country
having count(distinct InvoiceNo) > 1
order by distinctorders desc 

-- revenue by customers who are repeated more than 10 times
select 
     customerid,
	 country, 
	 distinctorders as rep_customer, 
	 revenue 
from (
       select 
	        customerid, 
			country, 
			count(distinct InvoiceNo) as distinctorders, 
			round(sum(totalprice),2) as revenue
       from view_OnlineRetail
       where InvoiceNo not like 'C%'
       group by customerid, country
       --having count(distinct InvoiceNo) > 1
	 ) as repeters
where distinctorders > 10
order by rep_customer desc 

--select CustomerID
--     InvoiceNo,
--     InvoiceDate,
--     InvoiceTime,
--	   DENSE_RANK() over(partition by customerid order by invoicedate)
--from view_OnlineRetail
--where InvoiceNo not like 'C%'

-- time difference between order
with timings as
(
select CustomerID,
     InvoiceNo as current_inoviceNo,
     InvoiceDate,
	 Country,
	 LAG(InvoiceDate) over(partition by customerid order by invoicedate) as previous_date,
	 LAG(InvoiceNo) over(partition by customerid order by invoicedate) as previous_invoiceNo
from view_OnlineRetail
where InvoiceNo not like 'C%'
),
diff as
(
select *, DATEDIFF(DD, previous_date, InvoiceDate) as time_diff from timings
)
select * from diff
where time_diff <> 0




-- cancellaction of transation
select distinct InvoiceNo, CustomerID from OnlineRetail where InvoiceNo like 'C%' and CustomerID is not null 
    and unitprice > 0
    and Description is not null
    and Country not in ('Unspecified')


select * from OnlineRetail as vn
inner join (select distinct InvoiceNo, CustomerID from OnlineRetail
            where InvoiceNo like 'C%' 
			and unitprice > 0
			and Description is not null
			and Country not in ('Unspecified')) as c
on vn.CustomerID = c.CustomerID and vn.InvoiceNo = c.InvoiceNo

-- cancel tranasaction by country
select Country,SUM(count) as totalcancle from
(
select Country, InvoiceNo, count(InvoiceNo) as count from OnlineRetail
where InvoiceNo like 'C%' 
            and unitprice > 0
			and Description is not null
			and Country not in ('Unspecified')
group by Country, InvoiceNo
) as cancellaction
group by Country




